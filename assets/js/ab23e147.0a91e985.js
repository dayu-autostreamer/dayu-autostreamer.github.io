"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9374],{2971:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"getting-started/install-lower-layer-system/pre-requisites","title":"Pre-requisites","description":"Please prepare for pre-requisites before installation, involving","source":"@site/docs/03-getting-started/02-install-lower-layer-system/01-pre-requisites.md","sourceDirName":"03-getting-started/02-install-lower-layer-system","slug":"/getting-started/install-lower-layer-system/pre-requisites","permalink":"/docs/getting-started/install-lower-layer-system/pre-requisites","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_label":"Pre-requisites","slug":"/getting-started/install-lower-layer-system/pre-requisites","custom_edit_url":null},"sidebar":"tutorialSidebar","previous":{"title":"Install Lower-Layer System","permalink":"/docs/getting-started/install-lower-layer-system"},"next":{"title":"Install Kubernetes","permalink":"/docs/getting-started/install-lower-layer-system/install-kubernetes"}}');var t=s(4848),o=s(8453);const d={sidebar_label:"Pre-requisites",slug:"/getting-started/install-lower-layer-system/pre-requisites",custom_edit_url:null},i="Pre-requisites",a={},l=[{value:"Turn off the firewall (both cloud/edge)",id:"turn-off-the-firewall-both-cloudedge",level:2},{value:"Enable IPv4 forwarding configuration iptables parameters (both cloud/edge)",id:"enable-ipv4-forwarding-configuration-iptables-parameters-both-cloudedge",level:2},{value:"Disable swap partition on disk (both cloud/edge)",id:"disable-swap-partition-on-disk-both-cloudedge",level:2},{value:"Set hostname (both cloud/edge)",id:"set-hostname-both-cloudedge",level:2},{value:"Set DNS (both cloud/edge)",id:"set-dns-both-cloudedge",level:2},{value:"Install and configure docker (both cloud/edge)",id:"install-and-configure-docker-both-cloudedge",level:2},{value:"Set cross-node clock synchronization (both cloud/edge)",id:"set-cross-node-clock-synchronization-both-cloudedge",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"pre-requisites",children:"Pre-requisites"})}),"\n",(0,t.jsx)(n.p,{children:"Please prepare for pre-requisites before installation, involving"}),"\n",(0,t.jsx)(n.h2,{id:"turn-off-the-firewall-both-cloudedge",children:"Turn off the firewall (both cloud/edge)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ufw disable\t\n"})}),"\n",(0,t.jsx)(n.h2,{id:"enable-ipv4-forwarding-configuration-iptables-parameters-both-cloudedge",children:"Enable IPv4 forwarding configuration iptables parameters (both cloud/edge)"}),"\n",(0,t.jsxs)(n.p,{children:["Translate the bridged ",(0,t.jsx)(n.code,{children:"IPv4/IPv6"})," traffic to the iptables chain"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"modprobe br_netfilter\n\ncat >> /etc/sysctl.conf << EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nEOF\n\nsysctl -p \n"})}),"\n",(0,t.jsx)(n.h2,{id:"disable-swap-partition-on-disk-both-cloudedge",children:"Disable swap partition on disk (both cloud/edge)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Temporary\nswapoff -a\n# Permanent                                        \nsed -ri 's/.*swap.*/#&/' /etc/fstab\n"})}),"\n",(0,t.jsx)(n.h2,{id:"set-hostname-both-cloudedge",children:"Set hostname (both cloud/edge)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Set hostname for each node\n# such as:\n# cloud (master)\nhostnamectl set-hostname master   \n# edge\nhostnamectl set-hostname edge1\nhostnamectl set-hostname edge2\n"})}),"\n",(0,t.jsx)(n.h2,{id:"set-dns-both-cloudedge",children:"Set DNS (both cloud/edge)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# view ip address on different nodes\nipconfig\n\n# add all ip address to each node\nsudo vim /etc/hosts\n# such as:\n# (ip hostname)\n192.168.247.128 master\n192.168.247.129 edge1\n"})}),"\n",(0,t.jsx)(n.h2,{id:"install-and-configure-docker-both-cloudedge",children:"Install and configure docker (both cloud/edge)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# X86/AMD64\nsudo apt-get update\nsudo apt-get install docker.io -y\n\nsudo systemctl start docker\nsudo systemctl enable docker\n\nsudo docker --version\n\n# ARM64\nsudo apt-get update\nsudo apt-get install curl wget apt-transport-https ca-certificates software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"\nsudo apt-get update\nsudo apt-get install docker-ce\n\nsudo docker --version\n\n'})}),"\n",(0,t.jsx)(n.p,{children:"Configure docker daemon"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'sudo vim /etc/docker/daemon.json\n\n# on cloud (master) add\uff1a\n{\n  "registry-mirrors": ["https://b9pmyelo.mirror.aliyuncs.com"],\n  "exec-opts": ["native.cgroupdriver=systemd"]\n}\n\n# on edge add\uff1a\n{\n  "registry-mirrors": ["https://b9pmyelo.mirror.aliyuncs.com"],\n  "exec-opts": ["native.cgroupdriver=cgroupfs"]\n}\n\n# execute both on cloud/edge:\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n\n# check docker Cgroup\ndocker info | grep Cgroup\n'})}),"\n",(0,t.jsx)(n.p,{children:"Configure Docker for non-root users without sudo operation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo groupadd docker  # Create a group (if already exists, an error will be reported, ignore it)\nsudo gpasswd -a ${USER} docker\nsudo systemctl restart docker\nsudo chmod a+rw /var/run/docker.sock\n\n# validation\ndocker images\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If unable to access ",(0,t.jsx)(n.a,{href:"https://hub.docker.com/",children:"Dockerhub"}),", you need to configure Docker registry,\nand you can refer to ",(0,t.jsx)(n.a,{href:"/docs/developer-guide/how-to-build/docker-registry",children:"Docker Registry Configuration"})," for instructions."]}),"\n",(0,t.jsx)(n.h2,{id:"set-cross-node-clock-synchronization-both-cloudedge",children:"Set cross-node clock synchronization (both cloud/edge)"}),"\n",(0,t.jsx)(n.p,{children:"Distributed systems need to ensure that the clocks of each node are synchronized, using NTP services to synchronize the cloud-edge distributed nodes."}),"\n",(0,t.jsx)(n.p,{children:"Install NTP Service."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo apt update\nsudo apt install ntp\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To configure NTP service, you should ",(0,t.jsx)(n.code,{children:"vim /etc/ntp.conf"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"For cloud node, synchronize time from public NTP servers."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"# Specify one or more NTP servers.\nserver 1.networktime.org iburst\nserver 2.networktime.org iburst\nserver ntp.synet.edu.cn iburst\nserver ntp.neu6.edu.cn iburst\nserver ntp.gwadar.cn iburst\nserver ntp.neu.edu.cn iburst\n"})}),"\n",(0,t.jsx)(n.p,{children:"For edge node, synchronize time from the cloud node."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"# Specify one or more NTP servers.\nserver 114.212.81.11  iburst\n"})}),"\n",(0,t.jsx)(n.p,{children:"Start NTP service."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo systemctl start ntp\nsudo systemctl enable ntp\n"})}),"\n",(0,t.jsx)(n.p,{children:"Verify the time synchronization status."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ntpq -p\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>i});var r=s(6540);const t={},o=r.createContext(t);function d(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);