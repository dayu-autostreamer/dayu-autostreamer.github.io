"use strict";(self.webpackChunkguide=self.webpackChunkguide||[]).push([[1552],{5680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>y});var o=r(6540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var a=o.createContext({}),d=function(e){var t=o.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=d(e.components);return o.createElement(a.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,a=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),s=d(r),m=n,y=s["".concat(a,".").concat(m)]||s[m]||p[m]||i;return r?o.createElement(y,l(l({ref:t},c),{},{components:r})):o.createElement(y,l({ref:t},c))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=m;var u={};for(var a in t)hasOwnProperty.call(t,a)&&(u[a]=t[a]);u.originalType=e,u[s]="string"==typeof e?e:n,l[1]=u;for(var d=2;d<i;d++)l[d]=r[d];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3379:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>u,toc:()=>a});var o=r(8168),n=(r(6540),r(5680));const i={sidebar_label:"How to Build",slug:"/developer-guide/how-to-build",custom_edit_url:null},l="How to Build",u={unversionedId:"developer-guide/how-to-build",id:"version-v1.0/developer-guide/how-to-build",isDocsHomePage:!1,title:"How to Build",description:"Components in Dayu system are dependent on docker containers. Thus, if you need to customize dayu system you should build specified images.",source:"@site/i18n/zh/docusaurus-plugin-content-docs/version-v1.0/04-developer-guide/02-how-to-build.md",sourceDirName:"04-developer-guide",slug:"/developer-guide/how-to-build",permalink:"/zh/docs/developer-guide/how-to-build",editUrl:null,tags:[],version:"v1.0",sidebarPosition:2,frontMatter:{sidebar_label:"How to Build",slug:"/developer-guide/how-to-build",custom_edit_url:null},sidebar:"version-v1.0/tutorialSidebar",previous:{title:"How to Develop",permalink:"/zh/docs/developer-guide/how-to-develop"},next:{title:"Contributing",permalink:"/zh/docs/community/contributing"}},a=[],d={toc:a},c="wrapper";function s(e){let{components:t,...r}=e;return(0,n.yg)(c,(0,o.A)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"how-to-build"},"How to Build"),(0,n.yg)("p",null,"Components in Dayu system are dependent on docker containers. Thus, if you need to customize dayu system you should build specified images."),(0,n.yg)("p",null,"The official images of Dayu system is at ",(0,n.yg)("a",{parentName:"p",href:"https://hub.docker.com/u/dayuhub"},"dockerhub/dayuhub"),"."),(0,n.yg)("p",null,"set meta information of building"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"# configure buildx buildkitd (default as empty, example at hack/resource/buildkitd_template.toml)\n# http registry can be configured in buildkitd.toml\nvim hack/resource/buildkitd.toml\n\n# configure buildx driver-opt (default as empty, example at hack/resource/driver_opts_template.toml)\n# proxy can be configured in driver_opts.toml\nvim hack/resource/driver_opts.toml\n\n# set docker meta info\n# default REG is docker.io\n# default REPO is dayuhub\n# default TAG is v1.0\nexport REG=xxx\nexport REPO=xxx\nexport TAG=xxx\n")),(0,n.yg)("p",null,"build all images"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"make all\n")),(0,n.yg)("p",null,"build specified images"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"# xxx/yyy/zzz/... refers to component name, you can choose components for building.\nmake build WHAT=xxx,yyy,zzz...\n")),(0,n.yg)("p",null,"If you change configuration files (buildkitd.toml/driver_opts.toml), you should delete buildx creator before make.\nYou are also recommended to try to delete buildx creator when you encounter error in docker building to fix the error."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"# view all buildx creator.\ndocker buildx ls\n\n# delete dayu-buildx, it will be re-generated when make.\ndocker buildx stop dayu-buildx\ndocker buildx rm dayu-buildx\n")))}s.isMDXComponent=!0}}]);